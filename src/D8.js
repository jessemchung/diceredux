
import React from 'react';
import * as THREE from 'three';
import { useConvexPolyhedron } from '@react-three/cannon';
import { Octahedron } from '@react-three/drei';


const D8 = (props) => {
  console.log(props, 'first ref');

  //radius and the rest are all passed in so likely radius adjusts these values.
  const radius = 1;
  const vertices = [
    [0, 0, 1],
    [0, 0, -1],
    [-1, 0, 0],
    [0, -1, 0],
    [1, 0, 0],
    [0, 1, 0],
  ].flat();
  const faces = [
    [0, 2, 3],
    [0, 3, 4],
    [0, 4, 5],
    [0, 5, 2],
    [1, 3, 2],
    [1, 4, 3],
    [1, 5, 4],
    [1, 2, 5],
  ].flat();

  console.log(vertices,'vertices')
  console.log(faces, 'faces');
  let args = [vertices, faces, radius, 0];
  let octahedronGeometry = new THREE.PolyhedronGeometry(...args);
  console.log(ref, 'before useConvex');
  console.log(args, ref, api, 'what is this');
  let [ref, api] = useConvexPolyhedron(() => {
    console.log('what');
    console.log(ref, 'inside useConvex');

    console.log({args: octahedronGeometry,
      mass: 1,
      ...props,}, 'the stuff inside')
    return {
      args: octahedronGeometry,
      mass: 1,
      ...props,
    };
  });
  console.log('api', api);
  console.log('props', props);
  console.log('ref', ref);
  //ref is changing for some reason on the second pass
  console.log('radius', radius);


  console.log('before if');
  if (ref !== undefined) {

    console.log('something');
  }



  //ref seems to connect to the useConvexPolyhedron which has all the information

  //Octahedron shape is generated by drei
  return (
    <Octahedron
      args={radius}
      ref={ref}
      onClick={() => api.applyImpulse([0, 20, 50], [0, 0, 0])}
      castShadow
      receiveShadow
    >
      <meshNormalMaterial attach="material" />
      {/* somehow adds the appropriate matieral */}
      {/* MeshNormalMaterial
      A material that maps the normal vectors to RGB colors. */}


    </Octahedron>
  );
};

export default D8;

